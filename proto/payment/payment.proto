syntax = "proto3";

package payment;

option go_package = "payment.v1;payment";

service PaymentService {
  rpc CreateSubscription(CreateSubscriptionRequest) returns (CreateSubscriptionResponse);
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse);
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse);
  rpc PurchaseToy(PurchaseToyRequest) returns (PurchaseToyResponse);
}

enum Status {
  STATUS_OK = 0;
  STATUS_INVALID_PLAN = 1;
  STATUS_INVALID_USER = 2;
  STATUS_INVALID_PAYMENT_METHOD = 3;
  STATUS_ALREADY_SUBSCRIBED = 4;
  STATUS_INTERNAL_ERROR = 5;
}

enum SubscriptionStatus {
  SUBSCRIPTION_STATUS_UNSPECIFIED = 0;
  SUBSCRIPTION_STATUS_ACTIVE = 1;
  SUBSCRIPTION_STATUS_INCOMPLETE = 2;
  SUBSCRIPTION_STATUS_CANCELED = 3;
  SUBSCRIPTION_STATUS_INCOMPLETE_EXPIRED = 4;
  SUBSCRIPTION_STATUS_PAST_DUE = 5;
  SUBSCRIPTION_STATUS_TRIALING = 6;
  SUBSCRIPTION_STATUS_UNPAID = 7;
}


message CreateSubscriptionRequest {
  int32 plan_id = 1;
  string payment_method_id = 2;
}

message CreateSubscriptionResponse {
  string sub_stripe_id = 1;
  int64 sub_id = 2;
  Status status = 3;
}

message CancelSubscriptionRequest {
  string sub_stripe_id = 1;
}

message CancelSubscriptionResponse {
  Status status = 1;
}

message GetSubscriptionRequest {
  string sub_stripe_id = 1;
}

message Subscription {
  int64 id = 1;
  int32 plan_id = 2;
  string stripe_subscription_id = 3;
  SubscriptionStatus status = 4;
  int64 current_period_end = 5;
}

message GetSubscriptionResponse {
  Subscription subscription = 1;
}

message PurchaseToyRequest {
  int64 toy_id = 1;
  int64 amount_cents = 2;
  string currency = 3;
  string payment_method_id = 4;
}

message PurchaseToyResponse {
  string payment_intent_id = 1;
  Status status = 2;
  string receipt_url = 3;
}
